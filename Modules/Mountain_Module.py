from random import randint, shuffle
from lightbulb import Plugin, command, implements, SlashCommand, SlashContext, option
from hikari import ResponseType, MessageFlag, ButtonStyle
from miru import button, ViewContext, View, Button
from Core import embed

plugin = Plugin("Mountain")


def get_level(rooms: int = 3):
    level = []
    chunk = [0, 1, 1]
    for _ in range(rooms):
        _chunk = chunk.copy()
        if randint(0, 2) == 2:
            _chunk.pop(randint(1, 2))
            _chunk.append(2)

        shuffle(_chunk)
        shuffle(_chunk)
        level.append(_chunk)
        del _chunk

    return level


class Mountain(View):
    def __init__(self, author: int, rooms: int):
        super().__init__()
        self.author = author
        self.level = get_level(rooms)
        self.hp = 100

    async def on(self, kletka: int, warmishka: bool = False, dont_war: bool = False):
        if not warmishka and not dont_war:
            if self.level[0][kletka] == 2:
                self.door_three.disabled = True
                self.door_two.disabled = True
                self.i_hot_alone.disabled = False
                self.i_damage.disabled = False
                self.door_one.disabled = True
                await self.message.edit(
                    embed=embed(
                        "üéÆ –í–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–µ",
                        "–í—ã –≤—Å—Ç—Ä–µ—Ç–∏–ª–∏ –º–∏—à–∫—É! –ß—Ç–æ —Ç–µ–ø–µ—Ä—å –¥–µ–ª–∞—Ç—å –±—É–¥–µ–º?",
                    ),
                    components=self.build(),
                )
            elif self.level[0][kletka] == 0:
                self.level.pop(0)
                await self.message.edit(
                    embed=embed(
                        "üéÆ –í–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–µ",
                        f"–ü—Ä–µ–æ–¥–æ–ª–µ–≤–∞—è –∏—Å–ø—ã—Ç–∞–Ω–∏—è –Ω–∞ –ø—É—Ç–∏, –≤—ã –≤—ã—à–ª–∏ –Ω–∞ –≤–µ—Ä—à–∏–Ω—É –≤—ã—à–µ, –æ—Å—Ç–∞–ª–æ—Å—å –ø–æ–¥—ä–µ–º–æ–≤: {len(self.level)}",
                    )
                )
            else:
                for i in self.children:
                    i.disabled = True

                await self.message.edit(
                    embed=embed(
                        "üéÆ –í–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–µ",
                        "–ü—Ä–µ–æ–¥–æ–ª–µ–≤–∞—è –∏—Å–ø—ã—Ç–∞–Ω–∏—è –Ω–∞ –ø—É—Ç–∏, –≤—ã –Ω–∞—Ç–∫–Ω—É–ª–∏—Å—å –Ω–∞ —Ç—É–ø–∏–∫!",
                    ),
                    components=self.build(),
                )
                self.stop()
        else:
            veroytnost = randint(0, 15 if dont_war else 10)
            if 5 < veroytnost < 7:
                minus_hp = randint(15 if warmishka else 1, 30 if warmishka else 15)
                self.hp -= minus_hp
                await self.message.edit(
                    embed=embed(
                        "üéÆ –í–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–µ",
                        f"–ë–ª–∏–Ω, –∞ –ª–æ–≤–∫–æ —Ç—ã —ç—Ç–æ –º–∏—à–∫–∞ –ø—Ä–∏–¥—É–º–∞–ª, —è –µ—â–µ –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ –Ω–∏ —á–µ—Ä—Ç–∞ –Ω–µ –ø–æ–Ω—è–ª, –º–∏–Ω—É—Å {minus_hp} :heart:, –æ—Å—Ç–∞–ª–æ—Å—å —Ö–ø: {self.hp} :heart:"
                        if warmishka
                        else f"–£–±–µ–∂–∞—Ç—å –Ω–µ –≤—ã—à–ª–æ, –º–∏—à–∫–∞ –≤–∞—Å –¥–æ–≥–Ω–∞–ª –∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ —É—Ä–æ–Ω –≤ —Ä–∞–∑–º–µ—Ä–µ {minus_hp} :heart:, –æ—Å—Ç–∞–ª–æ—Å—å —Ö–ø: {self.hp} :heart:",
                    )
                )
            else:
                self.door_one.disabled = False
                self.door_three.disabled = False
                self.door_two.disabled = False
                self.i_hot_alone.disabled = True
                self.i_damage.disabled = True
                await self.message.edit(
                    embed=embed(
                        "üéÆ –í–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–µ",
                        "–ú–∏—à–∫–∞ –º–∏–Ω–æ–≤–∞–ª, –º–æ–∂–Ω–æ –∏–¥—Ç–∏ –¥–∞–ª—å—à–µ.",
                    ),
                    components=self.build(),
                )
                self.level.pop(0)

        await self.checkers()

    async def checkers(self):
        if self.hp <= 0 or len(self.level) == 0:
            for i in self.children:
                i.disabled = True
            await self.message.edit(
                embed=embed(
                    "üéÆ –í–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–µ",
                    "–í—ã –Ω–µ —Å–º–æ–≥–ª–∏ –¥–æ–π—Ç–∏ –¥–æ –≤–µ—Ä—à–∏–Ω—ã, —Ç.–∫ —É –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∂–∏–∑–Ω–∏!"
                    if self.hp <= 0
                    else "–í—ã –¥–æ—à–ª–∏ –¥–æ –≤–µ—Ä—à–∏–Ω—ã –∏ —Ä–∞–∑–º–µ—Å—Ç–∏–ª–∏ —Ç–∞–º —Ñ–ª–∞–≥!",
                ),
                components=self.build(),
            )
            self.stop()

    @button(label="–í–ª–µ–≤–æ", row=1)
    async def door_one(self, button: Button, ctx: ViewContext):
        await ctx.defer()
        await self.on(0)

    @button(label="–ü—Ä—è–º–æ", row=1)
    async def door_two(self, button: Button, ctx: ViewContext):
        await ctx.defer()
        await self.on(1)

    @button(label="–ù–∞–ø—Ä–∞–≤–æ", row=1)
    async def door_three(self, button: Button, ctx: ViewContext):
        await ctx.defer()
        await self.on(2)

    @button(label="–ü—ã—Ç–∞—Ç—å—Å—è —É–±–µ–∂–∞—Ç—å", style=ButtonStyle.PRIMARY, row=2, disabled=True)
    async def i_hot_alone(self, button: Button, ctx: ViewContext):
        await ctx.defer()
        await self.on(0, i_goto_alone=True)

    @button(label="–£–¥–∞—Ä–∏—Ç—å –º–∏—à–∫—É", style=ButtonStyle.DANGER, row=2, disabled=True)
    async def i_damage(self, button: Button, ctx: ViewContext):
        await ctx.defer()
        await self.on(0, warmishka=True)


@plugin.command()
@option("—É—Ä–æ–≤–Ω–∏", "–ö–æ–ª-–≤–æ –∫–æ–º–Ω–∞—Ç –≤ –∏–≥—Ä–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 3).", required=False, type=int)
@command("–≤–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–µ", '–ó–∞–ø—É—Å—Ç–∏—Ç –∏–≥—Ä—É "–í–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–µ".')
@implements(SlashCommand)
async def mountain(ctx: SlashContext):
    s = ctx.raw_options.get("—É—Ä–æ–≤–Ω–∏")
    if s and (s > 10 or s < 2):
        await ctx.interaction.create_initial_response(
            ResponseType.MESSAGE_CREATE,
            flags=MessageFlag.EPHEMERAL,
            embed=embed(
                "‚ö†Ô∏è –û—à–∏–±–∫–∞",
                '–ó–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ "—É—Ä–æ–≤–Ω–∏" –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ –æ—Ç 2 –¥–æ 10 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ.',
            ),
        )
        return
    view = Mountain(ctx.user.id, s or 3)
    await ctx.interaction.create_initial_response(
        ResponseType.MESSAGE_CREATE,
        embed=embed(
            "üéÆ –í–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–µ",
            "–ù–∞—á–∏–Ω–∞–π—Ç–µ –∏–≥—Ä–∞—Ç—å!",
        ),
        components=view.build(),
    )
    await view.start(await ctx.interaction.fetch_initial_response())
    await view.wait()


def load(bot):
    bot.add_plugin(plugin)


def unload(bot):
    bot.remove_plugin(plugin)
